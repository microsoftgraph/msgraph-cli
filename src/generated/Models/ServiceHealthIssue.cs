// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ServiceHealthIssue : global::ApiSdk.Models.ServiceAnnouncementBase, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The classification property</summary>
        public global::ApiSdk.Models.ServiceHealthClassificationType? Classification { get; set; }
        /// <summary>The feature name of the service issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Feature { get; set; }
#nullable restore
#else
        public string Feature { get; set; }
#endif
        /// <summary>The feature group name of the service issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeatureGroup { get; set; }
#nullable restore
#else
        public string FeatureGroup { get; set; }
#endif
        /// <summary>The description of the service issue impact.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImpactDescription { get; set; }
#nullable restore
#else
        public string ImpactDescription { get; set; }
#endif
        /// <summary>Indicates whether the issue is resolved.</summary>
        public bool? IsResolved { get; set; }
        /// <summary>The origin property</summary>
        public global::ApiSdk.Models.ServiceHealthOrigin? Origin { get; set; }
        /// <summary>Collection of historical posts for the service issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.ServiceHealthIssuePost>? Posts { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.ServiceHealthIssuePost> Posts { get; set; }
#endif
        /// <summary>Indicates the service affected by the issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Service { get; set; }
#nullable restore
#else
        public string Service { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::ApiSdk.Models.ServiceHealthStatus? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.ServiceHealthIssue"/> and sets the default values.
        /// </summary>
        public ServiceHealthIssue() : base()
        {
            OdataType = "#microsoft.graph.serviceHealthIssue";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.ServiceHealthIssue"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.ServiceHealthIssue CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.ServiceHealthIssue();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "classification", n => { Classification = n.GetEnumValue<global::ApiSdk.Models.ServiceHealthClassificationType>(); } },
                { "feature", n => { Feature = n.GetStringValue(); } },
                { "featureGroup", n => { FeatureGroup = n.GetStringValue(); } },
                { "impactDescription", n => { ImpactDescription = n.GetStringValue(); } },
                { "isResolved", n => { IsResolved = n.GetBoolValue(); } },
                { "origin", n => { Origin = n.GetEnumValue<global::ApiSdk.Models.ServiceHealthOrigin>(); } },
                { "posts", n => { Posts = n.GetCollectionOfObjectValues<global::ApiSdk.Models.ServiceHealthIssuePost>(global::ApiSdk.Models.ServiceHealthIssuePost.CreateFromDiscriminatorValue)?.AsList(); } },
                { "service", n => { Service = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.ServiceHealthStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::ApiSdk.Models.ServiceHealthClassificationType>("classification", Classification);
            writer.WriteStringValue("feature", Feature);
            writer.WriteStringValue("featureGroup", FeatureGroup);
            writer.WriteStringValue("impactDescription", ImpactDescription);
            writer.WriteBoolValue("isResolved", IsResolved);
            writer.WriteEnumValue<global::ApiSdk.Models.ServiceHealthOrigin>("origin", Origin);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.ServiceHealthIssuePost>("posts", Posts);
            writer.WriteStringValue("service", Service);
            writer.WriteEnumValue<global::ApiSdk.Models.ServiceHealthStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
