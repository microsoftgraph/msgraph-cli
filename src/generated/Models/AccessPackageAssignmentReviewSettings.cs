// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessPackageAssignmentReviewSettings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The default decision to apply if the access is not reviewed. The possible values are: keepAccess, removeAccess, acceptAccessRecommendation, unknownFutureValue.</summary>
        public global::ApiSdk.Models.AccessReviewExpirationBehavior? ExpirationBehavior { get; set; }
        /// <summary>This collection specifies the users who will be the fallback reviewers when the primary reviewers don&apos;t respond.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.SubjectSet>? FallbackReviewers { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.SubjectSet> FallbackReviewers { get; set; }
#endif
        /// <summary>If true, access reviews are required for assignments through this policy.</summary>
        public bool? IsEnabled { get; set; }
        /// <summary>Specifies whether to display recommendations to the reviewer. The default value is true.</summary>
        public bool? IsRecommendationEnabled { get; set; }
        /// <summary>Specifies whether the reviewer must provide justification for the approval. The default value is true.</summary>
        public bool? IsReviewerJustificationRequired { get; set; }
        /// <summary>Specifies whether the principals can review their own assignments.</summary>
        public bool? IsSelfReview { get; set; }
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>This collection specifies the users or group of users who will review the access package assignments.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.SubjectSet>? PrimaryReviewers { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.SubjectSet> PrimaryReviewers { get; set; }
#endif
        /// <summary>When the first review should start and how often it should recur.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.EntitlementManagementSchedule? Schedule { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.EntitlementManagementSchedule Schedule { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.AccessPackageAssignmentReviewSettings"/> and sets the default values.
        /// </summary>
        public AccessPackageAssignmentReviewSettings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.AccessPackageAssignmentReviewSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.AccessPackageAssignmentReviewSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.AccessPackageAssignmentReviewSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expirationBehavior", n => { ExpirationBehavior = n.GetEnumValue<global::ApiSdk.Models.AccessReviewExpirationBehavior>(); } },
                { "fallbackReviewers", n => { FallbackReviewers = n.GetCollectionOfObjectValues<global::ApiSdk.Models.SubjectSet>(global::ApiSdk.Models.SubjectSet.CreateFromDiscriminatorValue)?.AsList(); } },
                { "isEnabled", n => { IsEnabled = n.GetBoolValue(); } },
                { "isRecommendationEnabled", n => { IsRecommendationEnabled = n.GetBoolValue(); } },
                { "isReviewerJustificationRequired", n => { IsReviewerJustificationRequired = n.GetBoolValue(); } },
                { "isSelfReview", n => { IsSelfReview = n.GetBoolValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "primaryReviewers", n => { PrimaryReviewers = n.GetCollectionOfObjectValues<global::ApiSdk.Models.SubjectSet>(global::ApiSdk.Models.SubjectSet.CreateFromDiscriminatorValue)?.AsList(); } },
                { "schedule", n => { Schedule = n.GetObjectValue<global::ApiSdk.Models.EntitlementManagementSchedule>(global::ApiSdk.Models.EntitlementManagementSchedule.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::ApiSdk.Models.AccessReviewExpirationBehavior>("expirationBehavior", ExpirationBehavior);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.SubjectSet>("fallbackReviewers", FallbackReviewers);
            writer.WriteBoolValue("isEnabled", IsEnabled);
            writer.WriteBoolValue("isRecommendationEnabled", IsRecommendationEnabled);
            writer.WriteBoolValue("isReviewerJustificationRequired", IsReviewerJustificationRequired);
            writer.WriteBoolValue("isSelfReview", IsSelfReview);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.SubjectSet>("primaryReviewers", PrimaryReviewers);
            writer.WriteObjectValue<global::ApiSdk.Models.EntitlementManagementSchedule>("schedule", Schedule);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
