// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TimeCard : global::ApiSdk.Models.ChangeTrackedEntity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The list of breaks associated with the timeCard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.TimeCardBreak>? Breaks { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.TimeCardBreak> Breaks { get; set; }
#endif
        /// <summary>The clock-in event of the timeCard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TimeCardEvent? ClockInEvent { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TimeCardEvent ClockInEvent { get; set; }
#endif
        /// <summary>The clock-out event of the timeCard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TimeCardEvent? ClockOutEvent { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TimeCardEvent ClockOutEvent { get; set; }
#endif
        /// <summary>Indicates whether this timeCard entry is confirmed. Possible values are: none, user, manager, unknownFutureValue.</summary>
        public global::ApiSdk.Models.ConfirmedBy? ConfirmedBy { get; set; }
        /// <summary>Notes about the timeCard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.ItemBody? Notes { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.ItemBody Notes { get; set; }
#endif
        /// <summary>The original timeCardEntry of the timeCard before it was edited.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TimeCardEntry? OriginalEntry { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TimeCardEntry OriginalEntry { get; set; }
#endif
        /// <summary>The current state of the timeCard during its life cycle. The possible values are: clockedIn, onBreak, clockedOut, unknownFutureValue.</summary>
        public global::ApiSdk.Models.TimeCardState? State { get; set; }
        /// <summary>User ID to which the timeCard belongs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.TimeCard"/> and sets the default values.
        /// </summary>
        public TimeCard() : base()
        {
            OdataType = "#microsoft.graph.timeCard";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.TimeCard"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.TimeCard CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.TimeCard();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "breaks", n => { Breaks = n.GetCollectionOfObjectValues<global::ApiSdk.Models.TimeCardBreak>(global::ApiSdk.Models.TimeCardBreak.CreateFromDiscriminatorValue)?.AsList(); } },
                { "clockInEvent", n => { ClockInEvent = n.GetObjectValue<global::ApiSdk.Models.TimeCardEvent>(global::ApiSdk.Models.TimeCardEvent.CreateFromDiscriminatorValue); } },
                { "clockOutEvent", n => { ClockOutEvent = n.GetObjectValue<global::ApiSdk.Models.TimeCardEvent>(global::ApiSdk.Models.TimeCardEvent.CreateFromDiscriminatorValue); } },
                { "confirmedBy", n => { ConfirmedBy = n.GetEnumValue<global::ApiSdk.Models.ConfirmedBy>(); } },
                { "notes", n => { Notes = n.GetObjectValue<global::ApiSdk.Models.ItemBody>(global::ApiSdk.Models.ItemBody.CreateFromDiscriminatorValue); } },
                { "originalEntry", n => { OriginalEntry = n.GetObjectValue<global::ApiSdk.Models.TimeCardEntry>(global::ApiSdk.Models.TimeCardEntry.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetEnumValue<global::ApiSdk.Models.TimeCardState>(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.TimeCardBreak>("breaks", Breaks);
            writer.WriteObjectValue<global::ApiSdk.Models.TimeCardEvent>("clockInEvent", ClockInEvent);
            writer.WriteObjectValue<global::ApiSdk.Models.TimeCardEvent>("clockOutEvent", ClockOutEvent);
            writer.WriteEnumValue<global::ApiSdk.Models.ConfirmedBy>("confirmedBy", ConfirmedBy);
            writer.WriteObjectValue<global::ApiSdk.Models.ItemBody>("notes", Notes);
            writer.WriteObjectValue<global::ApiSdk.Models.TimeCardEntry>("originalEntry", OriginalEntry);
            writer.WriteEnumValue<global::ApiSdk.Models.TimeCardState>("state", State);
            writer.WriteStringValue("userId", UserId);
        }
    }
}
#pragma warning restore CS0618
