// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessReviewScheduleDefinition : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Defines the list of additional users or group members to be notified of the access review progress.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessReviewNotificationRecipientItem>? AdditionalNotificationRecipients { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessReviewNotificationRecipientItem> AdditionalNotificationRecipients { get; set; }
#endif
        /// <summary>User who created this review. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.UserIdentity? CreatedBy { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.UserIdentity CreatedBy { get; set; }
#endif
        /// <summary>Timestamp when the access review series was created. Supports $select. Read-only.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>Description provided by review creators to provide more context of the review to admins. Supports $select.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DescriptionForAdmins { get; set; }
#nullable restore
#else
        public string DescriptionForAdmins { get; set; }
#endif
        /// <summary>Description provided  by review creators to provide more context of the review to reviewers. Reviewers see this description in the email sent to them requesting their review. Email notifications support up to 256 characters. Supports $select.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DescriptionForReviewers { get; set; }
#nullable restore
#else
        public string DescriptionForReviewers { get; set; }
#endif
        /// <summary>Name of the access review series. Supports $select and $orderby. Required on create.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>This collection of reviewer scopes is used to define the list of fallback reviewers. These fallback reviewers are notified to take action if no users are found from the list of reviewers specified. This could occur when either the group owner is specified as the reviewer but the group owner doesn&apos;t exist, or manager is specified as reviewer but a user&apos;s manager doesn&apos;t exist. See accessReviewReviewerScope. Replaces backupReviewers. Supports $select. NOTE: The value of this property will be ignored if fallback reviewers are assigned through the stageSettings property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessReviewReviewerScope>? FallbackReviewers { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessReviewReviewerScope> FallbackReviewers { get; set; }
#endif
        /// <summary>This property is required when scoping a review to guest users&apos; access across all Microsoft 365 groups and determines which Microsoft 365 groups are reviewed. Each group becomes a unique accessReviewInstance of the access review series.  For supported scopes, see accessReviewScope. Supports $select. For examples of options for configuring instanceEnumerationScope, see Configure the scope of your access review definition using the Microsoft Graph API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.AccessReviewScope? InstanceEnumerationScope { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.AccessReviewScope InstanceEnumerationScope { get; set; }
#endif
        /// <summary>If the accessReviewScheduleDefinition is a recurring access review, instances represent each recurrence. A review that doesn&apos;t recur will have exactly one instance. Instances also represent each unique resource under review in the accessReviewScheduleDefinition. If a review has multiple resources and multiple instances, each resource has a unique instance for each recurrence.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessReviewInstance>? Instances { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessReviewInstance> Instances { get; set; }
#endif
        /// <summary>Timestamp when the access review series was last modified. Supports $select. Read-only.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>This collection of access review scopes is used to define who are the reviewers. The reviewers property is only updatable if individual users are assigned as reviewers. Required on create. Supports $select. For examples of options for assigning reviewers, see Assign reviewers to your access review definition using the Microsoft Graph API. NOTE: The value of this property will be ignored if reviewers are assigned through the stageSettings property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessReviewReviewerScope>? Reviewers { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessReviewReviewerScope> Reviewers { get; set; }
#endif
        /// <summary>Defines the entities whose access is reviewed. For supported scopes, see accessReviewScope. Required on create. Supports $select and $filter (contains only). For examples of options for configuring scope, see Configure the scope of your access review definition using the Microsoft Graph API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.AccessReviewScope? Scope { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.AccessReviewScope Scope { get; set; }
#endif
        /// <summary>The settings for an access review series, see type definition below. Supports $select. Required on create.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.AccessReviewScheduleSettings? Settings { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.AccessReviewScheduleSettings Settings { get; set; }
#endif
        /// <summary>Required only for a multi-stage access review to define the stages and their settings. You can break down each review instance into up to three sequential stages, where each stage can have a different set of reviewers, fallback reviewers, and settings. Stages are created sequentially based on the dependsOn property. Optional.  When this property is defined, its settings are used instead of the corresponding settings in the accessReviewScheduleDefinition object and its settings, reviewers, and fallbackReviewers properties.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessReviewStageSettings>? StageSettings { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessReviewStageSettings> StageSettings { get; set; }
#endif
        /// <summary>This read-only field specifies the status of an access review. The typical states include Initializing, NotStarted, Starting, InProgress, Completing, Completed, AutoReviewing, and AutoReviewed.  Supports $select, $orderby, and $filter (eq only). Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.AccessReviewScheduleDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.AccessReviewScheduleDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.AccessReviewScheduleDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "additionalNotificationRecipients", n => { AdditionalNotificationRecipients = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewNotificationRecipientItem>(global::ApiSdk.Models.AccessReviewNotificationRecipientItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::ApiSdk.Models.UserIdentity>(global::ApiSdk.Models.UserIdentity.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "descriptionForAdmins", n => { DescriptionForAdmins = n.GetStringValue(); } },
                { "descriptionForReviewers", n => { DescriptionForReviewers = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "fallbackReviewers", n => { FallbackReviewers = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewReviewerScope>(global::ApiSdk.Models.AccessReviewReviewerScope.CreateFromDiscriminatorValue)?.AsList(); } },
                { "instanceEnumerationScope", n => { InstanceEnumerationScope = n.GetObjectValue<global::ApiSdk.Models.AccessReviewScope>(global::ApiSdk.Models.AccessReviewScope.CreateFromDiscriminatorValue); } },
                { "instances", n => { Instances = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewInstance>(global::ApiSdk.Models.AccessReviewInstance.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "reviewers", n => { Reviewers = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewReviewerScope>(global::ApiSdk.Models.AccessReviewReviewerScope.CreateFromDiscriminatorValue)?.AsList(); } },
                { "scope", n => { Scope = n.GetObjectValue<global::ApiSdk.Models.AccessReviewScope>(global::ApiSdk.Models.AccessReviewScope.CreateFromDiscriminatorValue); } },
                { "settings", n => { Settings = n.GetObjectValue<global::ApiSdk.Models.AccessReviewScheduleSettings>(global::ApiSdk.Models.AccessReviewScheduleSettings.CreateFromDiscriminatorValue); } },
                { "stageSettings", n => { StageSettings = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewStageSettings>(global::ApiSdk.Models.AccessReviewStageSettings.CreateFromDiscriminatorValue)?.AsList(); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewNotificationRecipientItem>("additionalNotificationRecipients", AdditionalNotificationRecipients);
            writer.WriteObjectValue<global::ApiSdk.Models.UserIdentity>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("descriptionForAdmins", DescriptionForAdmins);
            writer.WriteStringValue("descriptionForReviewers", DescriptionForReviewers);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewReviewerScope>("fallbackReviewers", FallbackReviewers);
            writer.WriteObjectValue<global::ApiSdk.Models.AccessReviewScope>("instanceEnumerationScope", InstanceEnumerationScope);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewInstance>("instances", Instances);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewReviewerScope>("reviewers", Reviewers);
            writer.WriteObjectValue<global::ApiSdk.Models.AccessReviewScope>("scope", Scope);
            writer.WriteObjectValue<global::ApiSdk.Models.AccessReviewScheduleSettings>("settings", Settings);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessReviewStageSettings>("stageSettings", StageSettings);
            writer.WriteStringValue("status", Status);
        }
    }
}
#pragma warning restore CS0618
