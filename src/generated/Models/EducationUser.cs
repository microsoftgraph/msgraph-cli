// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EducationUser : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>True if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.</summary>
        public bool? AccountEnabled { get; set; }
        /// <summary>The licenses that are assigned to the user. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AssignedLicense>? AssignedLicenses { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AssignedLicense> AssignedLicenses { get; set; }
#endif
        /// <summary>The plans that are assigned to the user. Read-only. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AssignedPlan>? AssignedPlans { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AssignedPlan> AssignedPlans { get; set; }
#endif
        /// <summary>Assignments belonging to the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.EducationAssignment>? Assignments { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.EducationAssignment> Assignments { get; set; }
#endif
        /// <summary>The telephone numbers for the user. Note: Although this is a string collection, only one number can be set for this property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? BusinessPhones { get; set; }
#nullable restore
#else
        public List<string> BusinessPhones { get; set; }
#endif
        /// <summary>Classes to which the user belongs. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.EducationClass>? Classes { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.EducationClass> Classes { get; set; }
#endif
        /// <summary>The entity who created the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.IdentitySet? CreatedBy { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.IdentitySet CreatedBy { get; set; }
#endif
        /// <summary>The name for the department in which the user works. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Department { get; set; }
#nullable restore
#else
        public string Department { get; set; }
#endif
        /// <summary>The name displayed in the address book for the user. This is usually the combination of the user&apos;s first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Where this user was created from. Possible values are: sis, manual.</summary>
        public global::ApiSdk.Models.EducationExternalSource? ExternalSource { get; set; }
        /// <summary>The name of the external source this resource was generated from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalSourceDetail { get; set; }
#nullable restore
#else
        public string ExternalSourceDetail { get; set; }
#endif
        /// <summary>The given name (first name) of the user. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GivenName { get; set; }
#nullable restore
#else
        public string GivenName { get; set; }
#endif
        /// <summary>The SMTP address for the user, for example, jeff@contoso.com. Read-Only. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mail { get; set; }
#nullable restore
#else
        public string Mail { get; set; }
#endif
        /// <summary>The mail address of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.PhysicalAddress? MailingAddress { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.PhysicalAddress MailingAddress { get; set; }
#endif
        /// <summary>The mail alias for the user. This property must be specified when a user is created. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MailNickname { get; set; }
#nullable restore
#else
        public string MailNickname { get; set; }
#endif
        /// <summary>The middle name of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MiddleName { get; set; }
#nullable restore
#else
        public string MiddleName { get; set; }
#endif
        /// <summary>The primary cellular telephone number for the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MobilePhone { get; set; }
#nullable restore
#else
        public string MobilePhone { get; set; }
#endif
        /// <summary>The office location for the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OfficeLocation { get; set; }
#nullable restore
#else
        public string OfficeLocation { get; set; }
#endif
        /// <summary>Additional information used to associate the Microsoft Entra user with its Active Directory counterpart.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.EducationOnPremisesInfo? OnPremisesInfo { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.EducationOnPremisesInfo OnPremisesInfo { get; set; }
#endif
        /// <summary>Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two can be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PasswordPolicies { get; set; }
#nullable restore
#else
        public string PasswordPolicies { get; set; }
#endif
        /// <summary>Specifies the password profile for the user. The profile contains the user&apos;s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.PasswordProfile? PasswordProfile { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.PasswordProfile PasswordProfile { get; set; }
#endif
        /// <summary>The preferred language for the user that should follow the ISO 639-1 code, for example, en-US.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreferredLanguage { get; set; }
#nullable restore
#else
        public string PreferredLanguage { get; set; }
#endif
        /// <summary>The primaryRole property</summary>
        public global::ApiSdk.Models.EducationUserRole? PrimaryRole { get; set; }
        /// <summary>The plans that are provisioned for the user. Read-only. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.ProvisionedPlan>? ProvisionedPlans { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.ProvisionedPlan> ProvisionedPlans { get; set; }
#endif
        /// <summary>Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application needs to acquire a new refresh token by requesting the authorized endpoint. Returned only on $select. Read-only.</summary>
        public DateTimeOffset? RefreshTokensValidFromDateTime { get; set; }
        /// <summary>Related records associated with the user. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.RelatedContact>? RelatedContacts { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.RelatedContact> RelatedContacts { get; set; }
#endif
        /// <summary>The address where the user lives.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.PhysicalAddress? ResidenceAddress { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.PhysicalAddress ResidenceAddress { get; set; }
#endif
        /// <summary>When set, the grading rubric attached to the assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.EducationRubric>? Rubrics { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.EducationRubric> Rubrics { get; set; }
#endif
        /// <summary>Schools to which the user belongs. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.EducationSchool>? Schools { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.EducationSchool> Schools { get; set; }
#endif
        /// <summary>True if the Outlook Global Address List should contain this user; otherwise, false. If not set, this will be treated as true. For users invited through the invitation manager, this property will be set to false.</summary>
        public bool? ShowInAddressList { get; set; }
        /// <summary>If the primary role is student, this block will contain student specific data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.EducationStudent? Student { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.EducationStudent Student { get; set; }
#endif
        /// <summary>The user&apos;s surname (family name or last name). Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Surname { get; set; }
#nullable restore
#else
        public string Surname { get; set; }
#endif
        /// <summary>Classes for which the user is a teacher.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.EducationClass>? TaughtClasses { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.EducationClass> TaughtClasses { get; set; }
#endif
        /// <summary>If the primary role is teacher, this block will contain teacher specific data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.EducationTeacher? Teacher { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.EducationTeacher Teacher { get; set; }
#endif
        /// <summary>A two-letter country code (ISO standard 3166). Required for users who will be assigned licenses due to a legal requirement to check for availability of services in countries or regions. Examples include: US, JP, and GB. Not nullable. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UsageLocation { get; set; }
#nullable restore
#else
        public string UsageLocation { get; set; }
#endif
        /// <summary>The directory user that corresponds to this user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.User? User { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.User User { get; set; }
#endif
        /// <summary>The user principal name (UPN) of the user. The UPN is an internet-style login name for the user based on the internet standard RFC 822. By convention, this should map to the user&apos;s email name. The general format is alias@domain, where domain must be present in the tenant&apos;s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of the organization. Supports $filter and $orderby.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPrincipalName { get; set; }
#nullable restore
#else
        public string UserPrincipalName { get; set; }
#endif
        /// <summary>A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserType { get; set; }
#nullable restore
#else
        public string UserType { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.EducationUser"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.EducationUser CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.EducationUser();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accountEnabled", n => { AccountEnabled = n.GetBoolValue(); } },
                { "assignedLicenses", n => { AssignedLicenses = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AssignedLicense>(global::ApiSdk.Models.AssignedLicense.CreateFromDiscriminatorValue)?.AsList(); } },
                { "assignedPlans", n => { AssignedPlans = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AssignedPlan>(global::ApiSdk.Models.AssignedPlan.CreateFromDiscriminatorValue)?.AsList(); } },
                { "assignments", n => { Assignments = n.GetCollectionOfObjectValues<global::ApiSdk.Models.EducationAssignment>(global::ApiSdk.Models.EducationAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "businessPhones", n => { BusinessPhones = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "classes", n => { Classes = n.GetCollectionOfObjectValues<global::ApiSdk.Models.EducationClass>(global::ApiSdk.Models.EducationClass.CreateFromDiscriminatorValue)?.AsList(); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::ApiSdk.Models.IdentitySet>(global::ApiSdk.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "department", n => { Department = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "externalSource", n => { ExternalSource = n.GetEnumValue<global::ApiSdk.Models.EducationExternalSource>(); } },
                { "externalSourceDetail", n => { ExternalSourceDetail = n.GetStringValue(); } },
                { "givenName", n => { GivenName = n.GetStringValue(); } },
                { "mail", n => { Mail = n.GetStringValue(); } },
                { "mailNickname", n => { MailNickname = n.GetStringValue(); } },
                { "mailingAddress", n => { MailingAddress = n.GetObjectValue<global::ApiSdk.Models.PhysicalAddress>(global::ApiSdk.Models.PhysicalAddress.CreateFromDiscriminatorValue); } },
                { "middleName", n => { MiddleName = n.GetStringValue(); } },
                { "mobilePhone", n => { MobilePhone = n.GetStringValue(); } },
                { "officeLocation", n => { OfficeLocation = n.GetStringValue(); } },
                { "onPremisesInfo", n => { OnPremisesInfo = n.GetObjectValue<global::ApiSdk.Models.EducationOnPremisesInfo>(global::ApiSdk.Models.EducationOnPremisesInfo.CreateFromDiscriminatorValue); } },
                { "passwordPolicies", n => { PasswordPolicies = n.GetStringValue(); } },
                { "passwordProfile", n => { PasswordProfile = n.GetObjectValue<global::ApiSdk.Models.PasswordProfile>(global::ApiSdk.Models.PasswordProfile.CreateFromDiscriminatorValue); } },
                { "preferredLanguage", n => { PreferredLanguage = n.GetStringValue(); } },
                { "primaryRole", n => { PrimaryRole = n.GetEnumValue<global::ApiSdk.Models.EducationUserRole>(); } },
                { "provisionedPlans", n => { ProvisionedPlans = n.GetCollectionOfObjectValues<global::ApiSdk.Models.ProvisionedPlan>(global::ApiSdk.Models.ProvisionedPlan.CreateFromDiscriminatorValue)?.AsList(); } },
                { "refreshTokensValidFromDateTime", n => { RefreshTokensValidFromDateTime = n.GetDateTimeOffsetValue(); } },
                { "relatedContacts", n => { RelatedContacts = n.GetCollectionOfObjectValues<global::ApiSdk.Models.RelatedContact>(global::ApiSdk.Models.RelatedContact.CreateFromDiscriminatorValue)?.AsList(); } },
                { "residenceAddress", n => { ResidenceAddress = n.GetObjectValue<global::ApiSdk.Models.PhysicalAddress>(global::ApiSdk.Models.PhysicalAddress.CreateFromDiscriminatorValue); } },
                { "rubrics", n => { Rubrics = n.GetCollectionOfObjectValues<global::ApiSdk.Models.EducationRubric>(global::ApiSdk.Models.EducationRubric.CreateFromDiscriminatorValue)?.AsList(); } },
                { "schools", n => { Schools = n.GetCollectionOfObjectValues<global::ApiSdk.Models.EducationSchool>(global::ApiSdk.Models.EducationSchool.CreateFromDiscriminatorValue)?.AsList(); } },
                { "showInAddressList", n => { ShowInAddressList = n.GetBoolValue(); } },
                { "student", n => { Student = n.GetObjectValue<global::ApiSdk.Models.EducationStudent>(global::ApiSdk.Models.EducationStudent.CreateFromDiscriminatorValue); } },
                { "surname", n => { Surname = n.GetStringValue(); } },
                { "taughtClasses", n => { TaughtClasses = n.GetCollectionOfObjectValues<global::ApiSdk.Models.EducationClass>(global::ApiSdk.Models.EducationClass.CreateFromDiscriminatorValue)?.AsList(); } },
                { "teacher", n => { Teacher = n.GetObjectValue<global::ApiSdk.Models.EducationTeacher>(global::ApiSdk.Models.EducationTeacher.CreateFromDiscriminatorValue); } },
                { "usageLocation", n => { UsageLocation = n.GetStringValue(); } },
                { "user", n => { User = n.GetObjectValue<global::ApiSdk.Models.User>(global::ApiSdk.Models.User.CreateFromDiscriminatorValue); } },
                { "userPrincipalName", n => { UserPrincipalName = n.GetStringValue(); } },
                { "userType", n => { UserType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteBoolValue("accountEnabled", AccountEnabled);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AssignedLicense>("assignedLicenses", AssignedLicenses);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AssignedPlan>("assignedPlans", AssignedPlans);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.EducationAssignment>("assignments", Assignments);
            writer.WriteCollectionOfPrimitiveValues<string>("businessPhones", BusinessPhones);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.EducationClass>("classes", Classes);
            writer.WriteObjectValue<global::ApiSdk.Models.IdentitySet>("createdBy", CreatedBy);
            writer.WriteStringValue("department", Department);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteEnumValue<global::ApiSdk.Models.EducationExternalSource>("externalSource", ExternalSource);
            writer.WriteStringValue("externalSourceDetail", ExternalSourceDetail);
            writer.WriteStringValue("givenName", GivenName);
            writer.WriteStringValue("mail", Mail);
            writer.WriteObjectValue<global::ApiSdk.Models.PhysicalAddress>("mailingAddress", MailingAddress);
            writer.WriteStringValue("mailNickname", MailNickname);
            writer.WriteStringValue("middleName", MiddleName);
            writer.WriteStringValue("mobilePhone", MobilePhone);
            writer.WriteStringValue("officeLocation", OfficeLocation);
            writer.WriteObjectValue<global::ApiSdk.Models.EducationOnPremisesInfo>("onPremisesInfo", OnPremisesInfo);
            writer.WriteStringValue("passwordPolicies", PasswordPolicies);
            writer.WriteObjectValue<global::ApiSdk.Models.PasswordProfile>("passwordProfile", PasswordProfile);
            writer.WriteStringValue("preferredLanguage", PreferredLanguage);
            writer.WriteEnumValue<global::ApiSdk.Models.EducationUserRole>("primaryRole", PrimaryRole);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.ProvisionedPlan>("provisionedPlans", ProvisionedPlans);
            writer.WriteDateTimeOffsetValue("refreshTokensValidFromDateTime", RefreshTokensValidFromDateTime);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.RelatedContact>("relatedContacts", RelatedContacts);
            writer.WriteObjectValue<global::ApiSdk.Models.PhysicalAddress>("residenceAddress", ResidenceAddress);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.EducationRubric>("rubrics", Rubrics);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.EducationSchool>("schools", Schools);
            writer.WriteBoolValue("showInAddressList", ShowInAddressList);
            writer.WriteObjectValue<global::ApiSdk.Models.EducationStudent>("student", Student);
            writer.WriteStringValue("surname", Surname);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.EducationClass>("taughtClasses", TaughtClasses);
            writer.WriteObjectValue<global::ApiSdk.Models.EducationTeacher>("teacher", Teacher);
            writer.WriteStringValue("usageLocation", UsageLocation);
            writer.WriteObjectValue<global::ApiSdk.Models.User>("user", User);
            writer.WriteStringValue("userPrincipalName", UserPrincipalName);
            writer.WriteStringValue("userType", UserType);
        }
    }
}
#pragma warning restore CS0618
