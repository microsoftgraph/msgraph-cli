// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SynchronizationJob : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The bulk upload operation for the job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.BulkUpload? BulkUpload { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.BulkUpload BulkUpload { get; set; }
#endif
        /// <summary>Schedule used to run the job. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SynchronizationSchedule? Schedule { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SynchronizationSchedule Schedule { get; set; }
#endif
        /// <summary>The synchronization schema configured for the job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SynchronizationSchema? Schema { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SynchronizationSchema Schema { get; set; }
#endif
        /// <summary>Status of the job, which includes when the job was last run, current job state, and errors.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SynchronizationStatus? Status { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SynchronizationStatus Status { get; set; }
#endif
        /// <summary>Settings associated with the job. Some settings are inherited from the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.KeyValuePair>? SynchronizationJobSettings { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.KeyValuePair> SynchronizationJobSettings { get; set; }
#endif
        /// <summary>Identifier of the synchronization template this job is based on.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TemplateId { get; set; }
#nullable restore
#else
        public string TemplateId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.SynchronizationJob"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.SynchronizationJob CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.SynchronizationJob();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "bulkUpload", n => { BulkUpload = n.GetObjectValue<global::ApiSdk.Models.BulkUpload>(global::ApiSdk.Models.BulkUpload.CreateFromDiscriminatorValue); } },
                { "schedule", n => { Schedule = n.GetObjectValue<global::ApiSdk.Models.SynchronizationSchedule>(global::ApiSdk.Models.SynchronizationSchedule.CreateFromDiscriminatorValue); } },
                { "schema", n => { Schema = n.GetObjectValue<global::ApiSdk.Models.SynchronizationSchema>(global::ApiSdk.Models.SynchronizationSchema.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetObjectValue<global::ApiSdk.Models.SynchronizationStatus>(global::ApiSdk.Models.SynchronizationStatus.CreateFromDiscriminatorValue); } },
                { "synchronizationJobSettings", n => { SynchronizationJobSettings = n.GetCollectionOfObjectValues<global::ApiSdk.Models.KeyValuePair>(global::ApiSdk.Models.KeyValuePair.CreateFromDiscriminatorValue)?.AsList(); } },
                { "templateId", n => { TemplateId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::ApiSdk.Models.BulkUpload>("bulkUpload", BulkUpload);
            writer.WriteObjectValue<global::ApiSdk.Models.SynchronizationSchedule>("schedule", Schedule);
            writer.WriteObjectValue<global::ApiSdk.Models.SynchronizationSchema>("schema", Schema);
            writer.WriteObjectValue<global::ApiSdk.Models.SynchronizationStatus>("status", Status);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.KeyValuePair>("synchronizationJobSettings", SynchronizationJobSettings);
            writer.WriteStringValue("templateId", TemplateId);
        }
    }
}
#pragma warning restore CS0618
