// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TeamsMessageEvidence : global::ApiSdk.Models.Security.AlertEvidence, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The identifier of the campaign that this Teams message is part of.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CampaignId { get; set; }
#nullable restore
#else
        public string CampaignId { get; set; }
#endif
        /// <summary>The channel ID associated with this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChannelId { get; set; }
#nullable restore
#else
        public string ChannelId { get; set; }
#endif
        /// <summary>The delivery action of this Teams message. Possible values are: unknown, deliveredAsSpam, delivered, blocked, replaced, unknownFutureValue.</summary>
        public global::ApiSdk.Models.Security.TeamsMessageDeliveryAction? DeliveryAction { get; set; }
        /// <summary>The delivery location of this Teams message. Possible values are: unknown, teams, quarantine, failed, unknownFutureValue.</summary>
        public global::ApiSdk.Models.Security.TeamsDeliveryLocation? DeliveryLocation { get; set; }
        /// <summary>The list of file entities that are attached to this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.FileEvidence>? Files { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.FileEvidence> Files { get; set; }
#endif
        /// <summary>The identifier of the team or group that this message is part of.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupId { get; set; }
#nullable restore
#else
        public string GroupId { get; set; }
#endif
        /// <summary>Indicates whether the message is owned by the organization that reported the security detection alert.</summary>
        public bool? IsExternal { get; set; }
        /// <summary>Indicates whether the message is owned by your organization.</summary>
        public bool? IsOwned { get; set; }
        /// <summary>Date and time when the message was last edited. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The direction of the Teams message. The possible values are: unknown, inbound, outbound, intraorg, unknownFutureValue.</summary>
        public global::ApiSdk.Models.Security.AntispamTeamsDirection? MessageDirection { get; set; }
        /// <summary>Message identifier unique within the thread.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MessageId { get; set; }
#nullable restore
#else
        public string MessageId { get; set; }
#endif
        /// <summary>Tenant ID (GUID) of the owner of the message.</summary>
        public Guid? OwningTenantId { get; set; }
        /// <summary>Identifier of the message to which the current message is a reply; otherwise, it&apos;s the same as the messageId.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentMessageId { get; set; }
#nullable restore
#else
        public string ParentMessageId { get; set; }
#endif
        /// <summary>The received date of this message. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? ReceivedDateTime { get; set; }
        /// <summary>The recipients of this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Recipients { get; set; }
#nullable restore
#else
        public List<string> Recipients { get; set; }
#endif
        /// <summary>The SMTP format address of the sender.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SenderFromAddress { get; set; }
#nullable restore
#else
        public string SenderFromAddress { get; set; }
#endif
        /// <summary>The IP address of the sender.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SenderIP { get; set; }
#nullable restore
#else
        public string SenderIP { get; set; }
#endif
        /// <summary>Source of the message; for example, desktop and mobile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceAppName { get; set; }
#nullable restore
#else
        public string SourceAppName { get; set; }
#endif
        /// <summary>The source ID of this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceId { get; set; }
#nullable restore
#else
        public string SourceId { get; set; }
#endif
        /// <summary>The subject of this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>The list of recipients who were detected as suspicious.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SuspiciousRecipients { get; set; }
#nullable restore
#else
        public List<string> SuspiciousRecipients { get; set; }
#endif
        /// <summary>Identifier of the channel or chat that this message is part of.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThreadId { get; set; }
#nullable restore
#else
        public string ThreadId { get; set; }
#endif
        /// <summary>The Teams message type. Supported values are: Chat, Topic, Space, and Meeting.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThreadType { get; set; }
#nullable restore
#else
        public string ThreadType { get; set; }
#endif
        /// <summary>The URLs contained in this Teams message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.UrlEvidence>? Urls { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.UrlEvidence> Urls { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Security.TeamsMessageEvidence"/> and sets the default values.
        /// </summary>
        public TeamsMessageEvidence() : base()
        {
            OdataType = "#microsoft.graph.security.teamsMessageEvidence";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Security.TeamsMessageEvidence"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Security.TeamsMessageEvidence CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Security.TeamsMessageEvidence();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "campaignId", n => { CampaignId = n.GetStringValue(); } },
                { "channelId", n => { ChannelId = n.GetStringValue(); } },
                { "deliveryAction", n => { DeliveryAction = n.GetEnumValue<global::ApiSdk.Models.Security.TeamsMessageDeliveryAction>(); } },
                { "deliveryLocation", n => { DeliveryLocation = n.GetEnumValue<global::ApiSdk.Models.Security.TeamsDeliveryLocation>(); } },
                { "files", n => { Files = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.FileEvidence>(global::ApiSdk.Models.Security.FileEvidence.CreateFromDiscriminatorValue)?.AsList(); } },
                { "groupId", n => { GroupId = n.GetStringValue(); } },
                { "isExternal", n => { IsExternal = n.GetBoolValue(); } },
                { "isOwned", n => { IsOwned = n.GetBoolValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "messageDirection", n => { MessageDirection = n.GetEnumValue<global::ApiSdk.Models.Security.AntispamTeamsDirection>(); } },
                { "messageId", n => { MessageId = n.GetStringValue(); } },
                { "owningTenantId", n => { OwningTenantId = n.GetGuidValue(); } },
                { "parentMessageId", n => { ParentMessageId = n.GetStringValue(); } },
                { "receivedDateTime", n => { ReceivedDateTime = n.GetDateTimeOffsetValue(); } },
                { "recipients", n => { Recipients = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "senderFromAddress", n => { SenderFromAddress = n.GetStringValue(); } },
                { "senderIP", n => { SenderIP = n.GetStringValue(); } },
                { "sourceAppName", n => { SourceAppName = n.GetStringValue(); } },
                { "sourceId", n => { SourceId = n.GetStringValue(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "suspiciousRecipients", n => { SuspiciousRecipients = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "threadId", n => { ThreadId = n.GetStringValue(); } },
                { "threadType", n => { ThreadType = n.GetStringValue(); } },
                { "urls", n => { Urls = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.UrlEvidence>(global::ApiSdk.Models.Security.UrlEvidence.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("campaignId", CampaignId);
            writer.WriteStringValue("channelId", ChannelId);
            writer.WriteEnumValue<global::ApiSdk.Models.Security.TeamsMessageDeliveryAction>("deliveryAction", DeliveryAction);
            writer.WriteEnumValue<global::ApiSdk.Models.Security.TeamsDeliveryLocation>("deliveryLocation", DeliveryLocation);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.FileEvidence>("files", Files);
            writer.WriteStringValue("groupId", GroupId);
            writer.WriteBoolValue("isExternal", IsExternal);
            writer.WriteBoolValue("isOwned", IsOwned);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteEnumValue<global::ApiSdk.Models.Security.AntispamTeamsDirection>("messageDirection", MessageDirection);
            writer.WriteStringValue("messageId", MessageId);
            writer.WriteGuidValue("owningTenantId", OwningTenantId);
            writer.WriteStringValue("parentMessageId", ParentMessageId);
            writer.WriteDateTimeOffsetValue("receivedDateTime", ReceivedDateTime);
            writer.WriteCollectionOfPrimitiveValues<string>("recipients", Recipients);
            writer.WriteStringValue("senderFromAddress", SenderFromAddress);
            writer.WriteStringValue("senderIP", SenderIP);
            writer.WriteStringValue("sourceAppName", SourceAppName);
            writer.WriteStringValue("sourceId", SourceId);
            writer.WriteStringValue("subject", Subject);
            writer.WriteCollectionOfPrimitiveValues<string>("suspiciousRecipients", SuspiciousRecipients);
            writer.WriteStringValue("threadId", ThreadId);
            writer.WriteStringValue("threadType", ThreadType);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.UrlEvidence>("urls", Urls);
        }
    }
}
#pragma warning restore CS0618
