// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Host : global::ApiSdk.Models.Security.Artifact, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The hostPairs that are resources associated with a host, where that host is the parentHost and has an outgoing pairing to a childHost.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostPair>? ChildHostPairs { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostPair> ChildHostPairs { get; set; }
#endif
        /// <summary>The hostComponents that are associated with this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostComponent>? Components { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostComponent> Components { get; set; }
#endif
        /// <summary>The hostCookies that are associated with this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostCookie>? Cookies { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostCookie> Cookies { get; set; }
#endif
        /// <summary>The first date and time when this host was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? FirstSeenDateTime { get; set; }
        /// <summary>The hostPairs that are associated with this host, where this host is either the parentHost or childHost.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostPair>? HostPairs { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostPair> HostPairs { get; set; }
#endif
        /// <summary>The most recent date and time when this host was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastSeenDateTime { get; set; }
        /// <summary>The hostPairs that are associated with a host, where that host is the childHost and has an incoming pairing with a parentHost.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostPair>? ParentHostPairs { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostPair> ParentHostPairs { get; set; }
#endif
        /// <summary>Passive DNS retrieval about this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.PassiveDnsRecord>? PassiveDns { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.PassiveDnsRecord> PassiveDns { get; set; }
#endif
        /// <summary>Reverse passive DNS retrieval about this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.PassiveDnsRecord>? PassiveDnsReverse { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.PassiveDnsRecord> PassiveDnsReverse { get; set; }
#endif
        /// <summary>The hostPorts associated with a host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostPort>? Ports { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostPort> Ports { get; set; }
#endif
        /// <summary>Represents a calculated reputation of this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.HostReputation? Reputation { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.HostReputation Reputation { get; set; }
#endif
        /// <summary>The hostSslCertificates that are associated with this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostSslCertificate>? SslCertificates { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostSslCertificate> SslCertificates { get; set; }
#endif
        /// <summary>The subdomains that are associated with this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.Subdomain>? Subdomains { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.Subdomain> Subdomains { get; set; }
#endif
        /// <summary>The hostTrackers that are associated with this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.HostTracker>? Trackers { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.HostTracker> Trackers { get; set; }
#endif
        /// <summary>The most recent whoisRecord for this host.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.WhoisRecord? Whois { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.WhoisRecord Whois { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Security.Host"/> and sets the default values.
        /// </summary>
        public Host() : base()
        {
            OdataType = "#microsoft.graph.security.host";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Security.Host"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Security.Host CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.security.hostname" => new global::ApiSdk.Models.Security.Hostname(),
                "#microsoft.graph.security.ipAddress" => new global::ApiSdk.Models.Security.IpAddress(),
                _ => new global::ApiSdk.Models.Security.Host(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "childHostPairs", n => { ChildHostPairs = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>(global::ApiSdk.Models.Security.HostPair.CreateFromDiscriminatorValue)?.AsList(); } },
                { "components", n => { Components = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostComponent>(global::ApiSdk.Models.Security.HostComponent.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cookies", n => { Cookies = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostCookie>(global::ApiSdk.Models.Security.HostCookie.CreateFromDiscriminatorValue)?.AsList(); } },
                { "firstSeenDateTime", n => { FirstSeenDateTime = n.GetDateTimeOffsetValue(); } },
                { "hostPairs", n => { HostPairs = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>(global::ApiSdk.Models.Security.HostPair.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lastSeenDateTime", n => { LastSeenDateTime = n.GetDateTimeOffsetValue(); } },
                { "parentHostPairs", n => { ParentHostPairs = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>(global::ApiSdk.Models.Security.HostPair.CreateFromDiscriminatorValue)?.AsList(); } },
                { "passiveDns", n => { PassiveDns = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.PassiveDnsRecord>(global::ApiSdk.Models.Security.PassiveDnsRecord.CreateFromDiscriminatorValue)?.AsList(); } },
                { "passiveDnsReverse", n => { PassiveDnsReverse = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.PassiveDnsRecord>(global::ApiSdk.Models.Security.PassiveDnsRecord.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ports", n => { Ports = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPort>(global::ApiSdk.Models.Security.HostPort.CreateFromDiscriminatorValue)?.AsList(); } },
                { "reputation", n => { Reputation = n.GetObjectValue<global::ApiSdk.Models.Security.HostReputation>(global::ApiSdk.Models.Security.HostReputation.CreateFromDiscriminatorValue); } },
                { "sslCertificates", n => { SslCertificates = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostSslCertificate>(global::ApiSdk.Models.Security.HostSslCertificate.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subdomains", n => { Subdomains = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.Subdomain>(global::ApiSdk.Models.Security.Subdomain.CreateFromDiscriminatorValue)?.AsList(); } },
                { "trackers", n => { Trackers = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.HostTracker>(global::ApiSdk.Models.Security.HostTracker.CreateFromDiscriminatorValue)?.AsList(); } },
                { "whois", n => { Whois = n.GetObjectValue<global::ApiSdk.Models.Security.WhoisRecord>(global::ApiSdk.Models.Security.WhoisRecord.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>("childHostPairs", ChildHostPairs);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostComponent>("components", Components);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostCookie>("cookies", Cookies);
            writer.WriteDateTimeOffsetValue("firstSeenDateTime", FirstSeenDateTime);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>("hostPairs", HostPairs);
            writer.WriteDateTimeOffsetValue("lastSeenDateTime", LastSeenDateTime);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPair>("parentHostPairs", ParentHostPairs);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.PassiveDnsRecord>("passiveDns", PassiveDns);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.PassiveDnsRecord>("passiveDnsReverse", PassiveDnsReverse);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostPort>("ports", Ports);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.HostReputation>("reputation", Reputation);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostSslCertificate>("sslCertificates", SslCertificates);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.Subdomain>("subdomains", Subdomains);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.HostTracker>("trackers", Trackers);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.WhoisRecord>("whois", Whois);
        }
    }
}
#pragma warning restore CS0618
