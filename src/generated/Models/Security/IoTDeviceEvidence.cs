// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IoTDeviceEvidence : global::ApiSdk.Models.Security.AlertEvidence, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The device ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceId { get; set; }
#nullable restore
#else
        public string DeviceId { get; set; }
#endif
        /// <summary>The friendly name of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceName { get; set; }
#nullable restore
#else
        public string DeviceName { get; set; }
#endif
        /// <summary>The URL to the device page in the IoT Defender portal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DevicePageLink { get; set; }
#nullable restore
#else
        public string DevicePageLink { get; set; }
#endif
        /// <summary>The device subtype.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceSubType { get; set; }
#nullable restore
#else
        public string DeviceSubType { get; set; }
#endif
        /// <summary>The type of the device. For example, &apos;temperature sensor,&apos; &apos;freezer,&apos; &apos;wind turbine,&apos; and so on.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceType { get; set; }
#nullable restore
#else
        public string DeviceType { get; set; }
#endif
        /// <summary>The importance level for the IoT device. Possible values are low, normal, high, and unknownFutureValue.</summary>
        public global::ApiSdk.Models.Security.IoTDeviceImportanceType? Importance { get; set; }
        /// <summary>The azureResourceEvidence entity that represents the IoT Hub that the device belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.AzureResourceEvidence? IoTHub { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.AzureResourceEvidence IoTHub { get; set; }
#endif
        /// <summary>The ID of the Azure Security Center for the IoT agent that is running on the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IoTSecurityAgentId { get; set; }
#nullable restore
#else
        public string IoTSecurityAgentId { get; set; }
#endif
        /// <summary>The current IP address of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.IpEvidence? IpAddress { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.IpEvidence IpAddress { get; set; }
#endif
        /// <summary>Indicates whether the device classified as an authorized device.</summary>
        public bool? IsAuthorized { get; set; }
        /// <summary>Indicates whether the device classified as a programming device.</summary>
        public bool? IsProgramming { get; set; }
        /// <summary>Indicates whether the device classified as a scanner.</summary>
        public bool? IsScanner { get; set; }
        /// <summary>The MAC address of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MacAddress { get; set; }
#nullable restore
#else
        public string MacAddress { get; set; }
#endif
        /// <summary>The manufacturer of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Manufacturer { get; set; }
#nullable restore
#else
        public string Manufacturer { get; set; }
#endif
        /// <summary>The model of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Model { get; set; }
#nullable restore
#else
        public string Model { get; set; }
#endif
        /// <summary>The current network interface controllers on the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Security.NicEvidence>? Nics { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Security.NicEvidence> Nics { get; set; }
#endif
        /// <summary>The operating system the device is running.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OperatingSystem { get; set; }
#nullable restore
#else
        public string OperatingSystem { get; set; }
#endif
        /// <summary>The owners for the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Owners { get; set; }
#nullable restore
#else
        public List<string> Owners { get; set; }
#endif
        /// <summary>The list of protocols that the device supports.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Protocols { get; set; }
#nullable restore
#else
        public List<string> Protocols { get; set; }
#endif
        /// <summary>The Purdue Layer of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PurdueLayer { get; set; }
#nullable restore
#else
        public string PurdueLayer { get; set; }
#endif
        /// <summary>The sensor that monitors the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sensor { get; set; }
#nullable restore
#else
        public string Sensor { get; set; }
#endif
        /// <summary>The serial number of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SerialNumber { get; set; }
#nullable restore
#else
        public string SerialNumber { get; set; }
#endif
        /// <summary>The site location of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Site { get; set; }
#nullable restore
#else
        public string Site { get; set; }
#endif
        /// <summary>The source (microsoft/vendor) of the device entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>A URL reference to the source item where the device is managed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.UrlEvidence? SourceRef { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.UrlEvidence SourceRef { get; set; }
#endif
        /// <summary>The zone location of the device within a site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zone { get; set; }
#nullable restore
#else
        public string Zone { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Security.IoTDeviceEvidence"/> and sets the default values.
        /// </summary>
        public IoTDeviceEvidence() : base()
        {
            OdataType = "#microsoft.graph.security.ioTDeviceEvidence";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Security.IoTDeviceEvidence"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Security.IoTDeviceEvidence CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Security.IoTDeviceEvidence();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "deviceId", n => { DeviceId = n.GetStringValue(); } },
                { "deviceName", n => { DeviceName = n.GetStringValue(); } },
                { "devicePageLink", n => { DevicePageLink = n.GetStringValue(); } },
                { "deviceSubType", n => { DeviceSubType = n.GetStringValue(); } },
                { "deviceType", n => { DeviceType = n.GetStringValue(); } },
                { "importance", n => { Importance = n.GetEnumValue<global::ApiSdk.Models.Security.IoTDeviceImportanceType>(); } },
                { "ioTHub", n => { IoTHub = n.GetObjectValue<global::ApiSdk.Models.Security.AzureResourceEvidence>(global::ApiSdk.Models.Security.AzureResourceEvidence.CreateFromDiscriminatorValue); } },
                { "ioTSecurityAgentId", n => { IoTSecurityAgentId = n.GetStringValue(); } },
                { "ipAddress", n => { IpAddress = n.GetObjectValue<global::ApiSdk.Models.Security.IpEvidence>(global::ApiSdk.Models.Security.IpEvidence.CreateFromDiscriminatorValue); } },
                { "isAuthorized", n => { IsAuthorized = n.GetBoolValue(); } },
                { "isProgramming", n => { IsProgramming = n.GetBoolValue(); } },
                { "isScanner", n => { IsScanner = n.GetBoolValue(); } },
                { "macAddress", n => { MacAddress = n.GetStringValue(); } },
                { "manufacturer", n => { Manufacturer = n.GetStringValue(); } },
                { "model", n => { Model = n.GetStringValue(); } },
                { "nics", n => { Nics = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Security.NicEvidence>(global::ApiSdk.Models.Security.NicEvidence.CreateFromDiscriminatorValue)?.AsList(); } },
                { "operatingSystem", n => { OperatingSystem = n.GetStringValue(); } },
                { "owners", n => { Owners = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "protocols", n => { Protocols = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "purdueLayer", n => { PurdueLayer = n.GetStringValue(); } },
                { "sensor", n => { Sensor = n.GetStringValue(); } },
                { "serialNumber", n => { SerialNumber = n.GetStringValue(); } },
                { "site", n => { Site = n.GetStringValue(); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "sourceRef", n => { SourceRef = n.GetObjectValue<global::ApiSdk.Models.Security.UrlEvidence>(global::ApiSdk.Models.Security.UrlEvidence.CreateFromDiscriminatorValue); } },
                { "zone", n => { Zone = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("deviceId", DeviceId);
            writer.WriteStringValue("deviceName", DeviceName);
            writer.WriteStringValue("devicePageLink", DevicePageLink);
            writer.WriteStringValue("deviceSubType", DeviceSubType);
            writer.WriteStringValue("deviceType", DeviceType);
            writer.WriteEnumValue<global::ApiSdk.Models.Security.IoTDeviceImportanceType>("importance", Importance);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.AzureResourceEvidence>("ioTHub", IoTHub);
            writer.WriteStringValue("ioTSecurityAgentId", IoTSecurityAgentId);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.IpEvidence>("ipAddress", IpAddress);
            writer.WriteBoolValue("isAuthorized", IsAuthorized);
            writer.WriteBoolValue("isProgramming", IsProgramming);
            writer.WriteBoolValue("isScanner", IsScanner);
            writer.WriteStringValue("macAddress", MacAddress);
            writer.WriteStringValue("manufacturer", Manufacturer);
            writer.WriteStringValue("model", Model);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Security.NicEvidence>("nics", Nics);
            writer.WriteStringValue("operatingSystem", OperatingSystem);
            writer.WriteCollectionOfPrimitiveValues<string>("owners", Owners);
            writer.WriteCollectionOfPrimitiveValues<string>("protocols", Protocols);
            writer.WriteStringValue("purdueLayer", PurdueLayer);
            writer.WriteStringValue("sensor", Sensor);
            writer.WriteStringValue("serialNumber", SerialNumber);
            writer.WriteStringValue("site", Site);
            writer.WriteStringValue("source", Source);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.UrlEvidence>("sourceRef", SourceRef);
            writer.WriteStringValue("zone", Zone);
        }
    }
}
#pragma warning restore CS0618
