// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SasTokenEvidence : global::ApiSdk.Models.Security.AlertEvidence, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The allowedIpAddresses property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllowedIpAddresses { get; set; }
#nullable restore
#else
        public string AllowedIpAddresses { get; set; }
#endif
        /// <summary>The allowedResourceTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedResourceTypes { get; set; }
#nullable restore
#else
        public List<string> AllowedResourceTypes { get; set; }
#endif
        /// <summary>The allowedServices property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedServices { get; set; }
#nullable restore
#else
        public List<string> AllowedServices { get; set; }
#endif
        /// <summary>The expiryDateTime property</summary>
        public DateTimeOffset? ExpiryDateTime { get; set; }
        /// <summary>The permissions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Permissions { get; set; }
#nullable restore
#else
        public List<string> Permissions { get; set; }
#endif
        /// <summary>The protocol property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Protocol { get; set; }
#nullable restore
#else
        public string Protocol { get; set; }
#endif
        /// <summary>The signatureHash property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignatureHash { get; set; }
#nullable restore
#else
        public string SignatureHash { get; set; }
#endif
        /// <summary>The signedWith property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedWith { get; set; }
#nullable restore
#else
        public string SignedWith { get; set; }
#endif
        /// <summary>The startDateTime property</summary>
        public DateTimeOffset? StartDateTime { get; set; }
        /// <summary>The storageResource property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Security.AzureResourceEvidence? StorageResource { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Security.AzureResourceEvidence StorageResource { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Security.SasTokenEvidence"/> and sets the default values.
        /// </summary>
        public SasTokenEvidence() : base()
        {
            OdataType = "#microsoft.graph.security.sasTokenEvidence";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Security.SasTokenEvidence"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Security.SasTokenEvidence CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Security.SasTokenEvidence();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "allowedIpAddresses", n => { AllowedIpAddresses = n.GetStringValue(); } },
                { "allowedResourceTypes", n => { AllowedResourceTypes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "allowedServices", n => { AllowedServices = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "expiryDateTime", n => { ExpiryDateTime = n.GetDateTimeOffsetValue(); } },
                { "permissions", n => { Permissions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "protocol", n => { Protocol = n.GetStringValue(); } },
                { "signatureHash", n => { SignatureHash = n.GetStringValue(); } },
                { "signedWith", n => { SignedWith = n.GetStringValue(); } },
                { "startDateTime", n => { StartDateTime = n.GetDateTimeOffsetValue(); } },
                { "storageResource", n => { StorageResource = n.GetObjectValue<global::ApiSdk.Models.Security.AzureResourceEvidence>(global::ApiSdk.Models.Security.AzureResourceEvidence.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("allowedIpAddresses", AllowedIpAddresses);
            writer.WriteCollectionOfPrimitiveValues<string>("allowedResourceTypes", AllowedResourceTypes);
            writer.WriteCollectionOfPrimitiveValues<string>("allowedServices", AllowedServices);
            writer.WriteDateTimeOffsetValue("expiryDateTime", ExpiryDateTime);
            writer.WriteCollectionOfPrimitiveValues<string>("permissions", Permissions);
            writer.WriteStringValue("protocol", Protocol);
            writer.WriteStringValue("signatureHash", SignatureHash);
            writer.WriteStringValue("signedWith", SignedWith);
            writer.WriteDateTimeOffsetValue("startDateTime", StartDateTime);
            writer.WriteObjectValue<global::ApiSdk.Models.Security.AzureResourceEvidence>("storageResource", StorageResource);
        }
    }
}
#pragma warning restore CS0618
