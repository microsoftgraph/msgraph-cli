// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models.Security
{
    #pragma warning disable CS1591
    public class FilePlanDescriptor : ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Represents the file plan descriptor of type authority applied to a particular retention label.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public FilePlanAuthority? Authority { get; set; }
#nullable restore
#else
        public FilePlanAuthority Authority { get; set; }
#endif
        /// <summary>Specifies the underlying authority that describes the type of content to be retained and its retention schedule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.AuthorityTemplate? AuthorityTemplate { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.AuthorityTemplate AuthorityTemplate { get; set; }
#endif
        /// <summary>The category property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public FilePlanAppliedCategory? Category { get; set; }
#nullable restore
#else
        public FilePlanAppliedCategory Category { get; set; }
#endif
        /// <summary>Specifies a group of similar types of content in a particular department.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.CategoryTemplate? CategoryTemplate { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.CategoryTemplate CategoryTemplate { get; set; }
#endif
        /// <summary>Represents the file plan descriptor of type citation applied to a particular retention label.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public FilePlanCitation? Citation { get; set; }
#nullable restore
#else
        public FilePlanCitation Citation { get; set; }
#endif
        /// <summary>The specific rule or regulation created by a jurisdiction used to determine whether certain labels and content should be retained or deleted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.CitationTemplate? CitationTemplate { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.CitationTemplate CitationTemplate { get; set; }
#endif
        /// <summary>Represents the file plan descriptor of type department applied to a particular retention label.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public FilePlanDepartment? Department { get; set; }
#nullable restore
#else
        public FilePlanDepartment Department { get; set; }
#endif
        /// <summary>Specifies the  department or business unit of an organization to which a label belongs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.DepartmentTemplate? DepartmentTemplate { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.DepartmentTemplate DepartmentTemplate { get; set; }
#endif
        /// <summary>Represents the file plan descriptor of type filePlanReference applied to a particular retention label.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.FilePlanReference? FilePlanReference { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.FilePlanReference FilePlanReference { get; set; }
#endif
        /// <summary>Specifies a unique alpha-numeric identifier for an organizationâ€™s retention schedule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.Security.FilePlanReferenceTemplate? FilePlanReferenceTemplate { get; set; }
#nullable restore
#else
        public ApiSdk.Models.Security.FilePlanReferenceTemplate FilePlanReferenceTemplate { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="FilePlanDescriptor"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new FilePlanDescriptor CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new FilePlanDescriptor();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "authority", n => { Authority = n.GetObjectValue<FilePlanAuthority>(FilePlanAuthority.CreateFromDiscriminatorValue); } },
                { "authorityTemplate", n => { AuthorityTemplate = n.GetObjectValue<ApiSdk.Models.Security.AuthorityTemplate>(ApiSdk.Models.Security.AuthorityTemplate.CreateFromDiscriminatorValue); } },
                { "category", n => { Category = n.GetObjectValue<FilePlanAppliedCategory>(FilePlanAppliedCategory.CreateFromDiscriminatorValue); } },
                { "categoryTemplate", n => { CategoryTemplate = n.GetObjectValue<ApiSdk.Models.Security.CategoryTemplate>(ApiSdk.Models.Security.CategoryTemplate.CreateFromDiscriminatorValue); } },
                { "citation", n => { Citation = n.GetObjectValue<FilePlanCitation>(FilePlanCitation.CreateFromDiscriminatorValue); } },
                { "citationTemplate", n => { CitationTemplate = n.GetObjectValue<ApiSdk.Models.Security.CitationTemplate>(ApiSdk.Models.Security.CitationTemplate.CreateFromDiscriminatorValue); } },
                { "department", n => { Department = n.GetObjectValue<FilePlanDepartment>(FilePlanDepartment.CreateFromDiscriminatorValue); } },
                { "departmentTemplate", n => { DepartmentTemplate = n.GetObjectValue<ApiSdk.Models.Security.DepartmentTemplate>(ApiSdk.Models.Security.DepartmentTemplate.CreateFromDiscriminatorValue); } },
                { "filePlanReference", n => { FilePlanReference = n.GetObjectValue<ApiSdk.Models.Security.FilePlanReference>(ApiSdk.Models.Security.FilePlanReference.CreateFromDiscriminatorValue); } },
                { "filePlanReferenceTemplate", n => { FilePlanReferenceTemplate = n.GetObjectValue<ApiSdk.Models.Security.FilePlanReferenceTemplate>(ApiSdk.Models.Security.FilePlanReferenceTemplate.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<FilePlanAuthority>("authority", Authority);
            writer.WriteObjectValue<ApiSdk.Models.Security.AuthorityTemplate>("authorityTemplate", AuthorityTemplate);
            writer.WriteObjectValue<FilePlanAppliedCategory>("category", Category);
            writer.WriteObjectValue<ApiSdk.Models.Security.CategoryTemplate>("categoryTemplate", CategoryTemplate);
            writer.WriteObjectValue<FilePlanCitation>("citation", Citation);
            writer.WriteObjectValue<ApiSdk.Models.Security.CitationTemplate>("citationTemplate", CitationTemplate);
            writer.WriteObjectValue<FilePlanDepartment>("department", Department);
            writer.WriteObjectValue<ApiSdk.Models.Security.DepartmentTemplate>("departmentTemplate", DepartmentTemplate);
            writer.WriteObjectValue<ApiSdk.Models.Security.FilePlanReference>("filePlanReference", FilePlanReference);
            writer.WriteObjectValue<ApiSdk.Models.Security.FilePlanReferenceTemplate>("filePlanReferenceTemplate", FilePlanReferenceTemplate);
        }
    }
}
