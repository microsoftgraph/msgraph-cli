// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// An abstract class containing the base properties for Managed eBook.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ManagedEBook : global::ApiSdk.Models.Entity, IParsable
    {
        /// <summary>The list of assignments for this eBook.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.ManagedEBookAssignment>? Assignments { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.ManagedEBookAssignment> Assignments { get; set; }
#endif
        /// <summary>The date and time when the eBook file was created.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>Description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The list of installation states for this eBook.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.DeviceInstallState>? DeviceStates { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.DeviceInstallState> DeviceStates { get; set; }
#endif
        /// <summary>Name of the eBook.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The more information Url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InformationUrl { get; set; }
#nullable restore
#else
        public string InformationUrl { get; set; }
#endif
        /// <summary>Mobile App Install Summary.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.EBookInstallSummary? InstallSummary { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.EBookInstallSummary InstallSummary { get; set; }
#endif
        /// <summary>Book cover.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.MimeContent? LargeCover { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.MimeContent LargeCover { get; set; }
#endif
        /// <summary>The date and time when the eBook was last modified.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The privacy statement Url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyInformationUrl { get; set; }
#nullable restore
#else
        public string PrivacyInformationUrl { get; set; }
#endif
        /// <summary>The date and time when the eBook was published.</summary>
        public DateTimeOffset? PublishedDateTime { get; set; }
        /// <summary>Publisher.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Publisher { get; set; }
#nullable restore
#else
        public string Publisher { get; set; }
#endif
        /// <summary>The list of installation states for this eBook.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.UserInstallStateSummary>? UserStateSummary { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.UserInstallStateSummary> UserStateSummary { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.ManagedEBook"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.ManagedEBook CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.iosVppEBook" => new global::ApiSdk.Models.IosVppEBook(),
                _ => new global::ApiSdk.Models.ManagedEBook(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "assignments", n => { Assignments = n.GetCollectionOfObjectValues<global::ApiSdk.Models.ManagedEBookAssignment>(global::ApiSdk.Models.ManagedEBookAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "deviceStates", n => { DeviceStates = n.GetCollectionOfObjectValues<global::ApiSdk.Models.DeviceInstallState>(global::ApiSdk.Models.DeviceInstallState.CreateFromDiscriminatorValue)?.AsList(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "informationUrl", n => { InformationUrl = n.GetStringValue(); } },
                { "installSummary", n => { InstallSummary = n.GetObjectValue<global::ApiSdk.Models.EBookInstallSummary>(global::ApiSdk.Models.EBookInstallSummary.CreateFromDiscriminatorValue); } },
                { "largeCover", n => { LargeCover = n.GetObjectValue<global::ApiSdk.Models.MimeContent>(global::ApiSdk.Models.MimeContent.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "privacyInformationUrl", n => { PrivacyInformationUrl = n.GetStringValue(); } },
                { "publishedDateTime", n => { PublishedDateTime = n.GetDateTimeOffsetValue(); } },
                { "publisher", n => { Publisher = n.GetStringValue(); } },
                { "userStateSummary", n => { UserStateSummary = n.GetCollectionOfObjectValues<global::ApiSdk.Models.UserInstallStateSummary>(global::ApiSdk.Models.UserInstallStateSummary.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.ManagedEBookAssignment>("assignments", Assignments);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.DeviceInstallState>("deviceStates", DeviceStates);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("informationUrl", InformationUrl);
            writer.WriteObjectValue<global::ApiSdk.Models.EBookInstallSummary>("installSummary", InstallSummary);
            writer.WriteObjectValue<global::ApiSdk.Models.MimeContent>("largeCover", LargeCover);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteStringValue("privacyInformationUrl", PrivacyInformationUrl);
            writer.WriteDateTimeOffsetValue("publishedDateTime", PublishedDateTime);
            writer.WriteStringValue("publisher", Publisher);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.UserInstallStateSummary>("userStateSummary", UserStateSummary);
        }
    }
}
#pragma warning restore CS0618
