// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Onenote : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Notebook>? Notebooks { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Notebook> Notebooks { get; set; }
#endif
        /// <summary>The status of OneNote operations. Getting an operations collection isn&apos;t supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.OnenoteOperation>? Operations { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.OnenoteOperation> Operations { get; set; }
#endif
        /// <summary>The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.OnenotePage>? Pages { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.OnenotePage> Pages { get; set; }
#endif
        /// <summary>The image and other file resources in OneNote pages. Getting a resources collection isn&apos;t supported, but you can get the binary content of a specific resource. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.OnenoteResource>? Resources { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.OnenoteResource> Resources { get; set; }
#endif
        /// <summary>The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.SectionGroup>? SectionGroups { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.SectionGroup> SectionGroups { get; set; }
#endif
        /// <summary>The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.OnenoteSection>? Sections { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.OnenoteSection> Sections { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Onenote"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Onenote CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Onenote();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "notebooks", n => { Notebooks = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Notebook>(global::ApiSdk.Models.Notebook.CreateFromDiscriminatorValue)?.AsList(); } },
                { "operations", n => { Operations = n.GetCollectionOfObjectValues<global::ApiSdk.Models.OnenoteOperation>(global::ApiSdk.Models.OnenoteOperation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pages", n => { Pages = n.GetCollectionOfObjectValues<global::ApiSdk.Models.OnenotePage>(global::ApiSdk.Models.OnenotePage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<global::ApiSdk.Models.OnenoteResource>(global::ApiSdk.Models.OnenoteResource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "sectionGroups", n => { SectionGroups = n.GetCollectionOfObjectValues<global::ApiSdk.Models.SectionGroup>(global::ApiSdk.Models.SectionGroup.CreateFromDiscriminatorValue)?.AsList(); } },
                { "sections", n => { Sections = n.GetCollectionOfObjectValues<global::ApiSdk.Models.OnenoteSection>(global::ApiSdk.Models.OnenoteSection.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Notebook>("notebooks", Notebooks);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.OnenoteOperation>("operations", Operations);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.OnenotePage>("pages", Pages);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.OnenoteResource>("resources", Resources);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.SectionGroup>("sectionGroups", SectionGroups);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.OnenoteSection>("sections", Sections);
        }
    }
}
#pragma warning restore CS0618
