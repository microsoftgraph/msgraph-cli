// <auto-generated/>
#pragma warning disable CS0618
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphApplication;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphDevice;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphGroup;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphOrgContact;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphServicePrincipal;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphUser;
using ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.Ref;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Cli.Commons.IO;
using Microsoft.Kiota.Cli.Commons;
using System.Collections.Generic;
using System.CommandLine;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System;
namespace ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \directory\administrativeUnits\{administrativeUnit-id}\members\{directoryObject-id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DirectoryObjectItemRequestBuilder : BaseCliRequestBuilder
    {
        /// <summary>
        /// Casts the previous resource to application.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphApplicationByIdNavCommand()
        {
            var command = new Command("graph-application-by-id");
            command.Description = "Casts the previous resource to application.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphApplication.GraphApplicationRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Casts the previous resource to device.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphDeviceByIdNavCommand()
        {
            var command = new Command("graph-device-by-id");
            command.Description = "Casts the previous resource to device.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphDevice.GraphDeviceRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Casts the previous resource to group.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphGroupByIdNavCommand()
        {
            var command = new Command("graph-group-by-id");
            command.Description = "Casts the previous resource to group.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphGroup.GraphGroupRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Casts the previous resource to orgContact.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphOrgContactByIdNavCommand()
        {
            var command = new Command("graph-org-contact-by-id");
            command.Description = "Casts the previous resource to orgContact.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphOrgContact.GraphOrgContactRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Casts the previous resource to servicePrincipal.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphServicePrincipalByIdNavCommand()
        {
            var command = new Command("graph-service-principal-by-id");
            command.Description = "Casts the previous resource to servicePrincipal.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphServicePrincipal.GraphServicePrincipalRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Casts the previous resource to user.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildGraphUserByIdNavCommand()
        {
            var command = new Command("graph-user-by-id");
            command.Description = "Casts the previous resource to user.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.GraphUser.GraphUserRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Provides operations to manage the collection of directory entities.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildRefByIdNavCommand()
        {
            var command = new Command("ref-by-id");
            command.Description = "Provides operations to manage the collection of directory entities.";
            var builder = new global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.Ref.RefRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildDeleteCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.DirectoryObjectItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        public DirectoryObjectItemRequestBuilder(Dictionary<string, object> pathParameters) : base("{+baseurl}/directory/administrativeUnits/{administrativeUnit%2Did}/members/{directoryObject%2Did}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.DirectoryNamespace.AdministrativeUnits.Item.Members.Item.DirectoryObjectItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public DirectoryObjectItemRequestBuilder(string rawUrl) : base("{+baseurl}/directory/administrativeUnits/{administrativeUnit%2Did}/members/{directoryObject%2Did}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
