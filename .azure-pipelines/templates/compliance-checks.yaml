parameters:
  - name: 'scanSource'
    type: boolean
    default: false
  - name: 'scanBinary'
    type: boolean
    default: false
  - name: buildOutputArtifact
    type: "string"
    default: build-output
pool:
  vmImage: windows-latest

steps:
  - pwsh: |
      Write-Verbose -Verbose "scanSource = '$(scanSource)'"
      Write-Verbose -Verbose "scanBinary = '$(scanSource)'"
      Write-Verbose -Verbose "buildOutputArtifact = '$(buildOutputArtifact)'"
      Write-Verbose -Verbose "Agent OS = '$(Agent.OS)'"

  - task: UseDotNet@2
    displayName: 'Use .NET 6'
    inputs:
      version: 6.x

  - ${{ if eq(parameters.scanSource, true) }}:
    - task: PoliCheck@2
      displayName: 'Run PoliCheck'
      inputs:
        result: poli_result_src.xml
        optionsSEV: "1|2"
        targetArgument: $(Build.SourcesDirectory)/src
        termTypeL: English
        optionsPE: 2

    - task: CredScan@3
      displayName: 'Run CredScan'
      inputs:
        scanFolder: '$(Build.SourcesDirectory)\src'
        debugMode: false
        verboseOutput: true

  - ${{ if eq(parameters.scanBinary, true) }}:
    - task: AntiMalware@3
      displayName: 'Run MpCmdRun.exe - Product Binaries'
      inputs:
        FileDirPath: $(Pipeline.Workspace)/$(buildOutputArtifact)
        TreatSignatureUpdateFailureAs: Warning
        TreatStaleSignatureAs: Error

    - task: BinSkim@4
      displayName: 'Run BinSkim - Product Binaries'
      inputs:
        InputType: Basic
        AnalyzeSymPath: '$(binPath)'
        AnalyzeVerbose: true
        AnalyzeHashes: true
        AnalyzeEnvironment: false
        AnalyzeStatistics: true

    - task: PublishSecurityAnalysisLogs@3
      displayName: 'Publish Security Analysis Logs'
      inputs:
        ArtifactName: CodeAnalysisLogs
        BinSkim: true
        TargetPath: $(Build.ArtifactStagingDirectory)/security/logs

    - task: PostAnalysis@2
      displayName: 'Post Analysis'
      inputs:
        GdnBreakAllTools: true
    
    # - publish: $(Build.ArtifactStagingDirectory)/security/logs
    #   artifact: security-logs
